// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model stores {
  shop          String       @id
  isActive      Boolean?     @default(false)
  identifier    String?      @unique
  secret        String?      @default(uuid())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  campaigns     campaigns[]
  theme         storeThemes?
  publicationId String
}

model session {
  id      String  @id
  content String? @db.Text
  shop    String?
}

model campaigns {
  id                      String            @id @default(cuid())
  storeId                 String
  store                   stores            @relation(fields: [storeId], references: [shop])
  collectionId            String
  handle                  String
  isActive                Boolean           @default(false)
  announcement            String
  accessPageConfig        accessPageConfig?
  createdAt               DateTime          @default(now())
  updatedAt               DateTime          @updatedAt
  pageTitle               String?
  pageDescription         String?
  cartTitle               String?
  cartItemsImageStyle     String?
  cartDescription         String?
  cartCheckoutButtonStyle String?
  cartBackgroundColor     String?
  cartTextColor           String?
  previewToken            String?           @default(uuid())
}

model storeThemes {
  id              String   @id @default(cuid())
  storeId         String   @unique
  store           stores   @relation(fields: [storeId], references: [shop])
  favicon         String?
  logo            String?
  primaryColor    String?
  secondaryColor  String?
  backgroundColor String?
  borderRadius    Int?     @default(0)
  logoPosition    String?  @default("left")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model accessPageConfig {
  id                  String    @id @default(cuid())
  campaignId          String    @unique
  campaign            campaigns @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  layout              String
  headline            String
  body                String?
  password            String?
  passwordPlaceholder String?
  ctaText             String?
  ctaUrl              String?
  backgroundColor     String?
  backgroundImage     String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}